{
  "permissions": {
    "allow": [
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd OnbMediaAspectRatio enum and useSwiftUIVideoPlayer parameter to OnbMediaType\n\n- Create OnbMediaAspectRatio enum with .auto, .square, .portrait, .landscape cases\n- Add aspectRatio parameter to .image, .video, and .lottie cases (default: .auto)\n- Add useSwiftUIVideoPlayer parameter to .video case (default: false)\n- Add aspectRatio computed property to OnbMediaType\n- Update AnyMediaView to apply aspectRatio conditionally using ifSatisfiesCondition\n- Only apply .aspectRatio() modifier when aspectRatioValue != nil to avoid layout bugs\n- Aspect ratios: .square (1:1), .portrait (3:4), .landscape (16:9), .auto (nil)\n\nRefactor VideoLoaderView to match ImageLoaderView structure for proper clipping\n\n- Add Rectangle() with opacity(placeholderOpacity) as base layer\n- Wrap video content in .overlay() modifier\n- Add .clipped() to ensure content clips to parent frame\n- Remove cornerRadius parameter from VideoLoaderView (applied externally in AnyMediaView)\n- Remove extra .frame() and .background() from loading states\n- Update AnyMediaView to apply .cornerRadius() outside VideoLoaderView\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
